<?php

namespace DoctrineProxy\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'login', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nickname', '' . "\0" . 'App\\Entity\\User' . "\0" . 'name', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'registrationDate', '' . "\0" . 'App\\Entity\\User' . "\0" . 'actualDate', '' . "\0" . 'App\\Entity\\User' . "\0" . 'zipCode', '' . "\0" . 'App\\Entity\\User' . "\0" . 'active', '' . "\0" . 'App\\Entity\\User' . "\0" . 'dateFinalization', '' . "\0" . 'App\\Entity\\User' . "\0" . 'token', '' . "\0" . 'App\\Entity\\User' . "\0" . 'changedPasswordToken', '' . "\0" . 'App\\Entity\\User' . "\0" . 'loginDate', '' . "\0" . 'App\\Entity\\User' . "\0" . 'accessAmount', '' . "\0" . 'App\\Entity\\User' . "\0" . 'tokenExpires');
        }

        return array('__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'login', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nickname', '' . "\0" . 'App\\Entity\\User' . "\0" . 'name', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'registrationDate', '' . "\0" . 'App\\Entity\\User' . "\0" . 'actualDate', '' . "\0" . 'App\\Entity\\User' . "\0" . 'zipCode', '' . "\0" . 'App\\Entity\\User' . "\0" . 'active', '' . "\0" . 'App\\Entity\\User' . "\0" . 'dateFinalization', '' . "\0" . 'App\\Entity\\User' . "\0" . 'token', '' . "\0" . 'App\\Entity\\User' . "\0" . 'changedPasswordToken', '' . "\0" . 'App\\Entity\\User' . "\0" . 'loginDate', '' . "\0" . 'App\\Entity\\User' . "\0" . 'accessAmount', '' . "\0" . 'App\\Entity\\User' . "\0" . 'tokenExpires');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogin', array());

        return parent::getLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogin($login)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogin', array($login));

        return parent::setLogin($login);
    }

    /**
     * {@inheritDoc}
     */
    public function getNickname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNickname', array());

        return parent::getNickname();
    }

    /**
     * {@inheritDoc}
     */
    public function setNickname($nickname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNickname', array($nickname));

        return parent::setNickname($nickname);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistrationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistrationDate', array());

        return parent::getRegistrationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistrationDate($registrationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistrationDate', array($registrationDate));

        return parent::setRegistrationDate($registrationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getActualDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActualDate', array());

        return parent::getActualDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setActualDate($actualDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActualDate', array($actualDate));

        return parent::setActualDate($actualDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getZipCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZipCode', array());

        return parent::getZipCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setZipCode($zipCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZipCode', array($zipCode));

        return parent::setZipCode($zipCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFinalization()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFinalization', array());

        return parent::getDateFinalization();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFinalization($dateFinalization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFinalization', array($dateFinalization));

        return parent::setDateFinalization($dateFinalization);
    }

    /**
     * {@inheritDoc}
     */
    public function getToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToken', array());

        return parent::getToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setToken($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToken', array($token));

        return parent::setToken($token);
    }

    /**
     * {@inheritDoc}
     */
    public function getChangedPasswordToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChangedPasswordToken', array());

        return parent::getChangedPasswordToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setChangedPasswordToken($changedPasswordToken)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChangedPasswordToken', array($changedPasswordToken));

        return parent::setChangedPasswordToken($changedPasswordToken);
    }

    /**
     * {@inheritDoc}
     */
    public function getLoginDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLoginDate', array());

        return parent::getLoginDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setLoginDate($loginDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLoginDate', array($loginDate));

        return parent::setLoginDate($loginDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessAmount', array());

        return parent::getAccessAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccessAmount($accessAmount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccessAmount', array($accessAmount));

        return parent::setAccessAmount($accessAmount);
    }

    /**
     * {@inheritDoc}
     */
    public function getTokenExpires()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTokenExpires', array());

        return parent::getTokenExpires();
    }

    /**
     * {@inheritDoc}
     */
    public function setTokenExpires($tokenExpires)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTokenExpires', array($tokenExpires));

        return parent::setTokenExpires($tokenExpires);
    }

}
